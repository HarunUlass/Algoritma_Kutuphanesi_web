import React from 'react';
import { Link } from 'react-router-dom';
import '../styles/NewHome.css';
import logoImage from '../assets/logo.png';

// Kategori t√ºr√ºn√º tanƒ±mlayalƒ±m
interface Category {
  id: string;
  title: string;
  icon: string;
  description: string;
  color: string;
  subCategories: string[];
}

// Yeni kategoriler
const categories: Category[] = [
  {
    id: '1',
    title: 'Veri Yapƒ±larƒ±',
    icon: 'üèóÔ∏è',
    description: 'Diziler, Baƒülƒ± Listeler, Aƒüa√ßlar, Hash Tablolarƒ± ve daha fazlasƒ±',
    color: '#3498db',
    subCategories: ['Diziler', 'Baƒülƒ± Listeler', 'Aƒüa√ßlar', 'Hash Tablolarƒ±', 'Yƒ±ƒüƒ±nlar ve Kuyruklar']
  },
  {
    id: '2',
    title: 'Derin √ñƒürenme',
    icon: 'üß†',
    description: 'Yapay Sinir Aƒülarƒ±, CNN, RNN ve derin √∂ƒürenme mimarileri',
    color: '#9b59b6',
    subCategories: ['Sinir Aƒülarƒ±', 'CNN', 'RNN', 'Transformers', 'GAN']
  },
  {
    id: '3',
    title: 'Makine √ñƒürenmesi',
    icon: 'ü§ñ',
    description: 'Regresyon, Sƒ±nƒ±flandƒ±rma, K√ºmeleme ve diƒüer ML algoritmalarƒ±',
    color: '#e74c3c',
    subCategories: ['Denetimli √ñƒürenme', 'Denetimsiz √ñƒürenme', 'Peki≈ütirmeli √ñƒürenme']
  },
  {
    id: '4',
    title: 'Doƒüal Dil ƒ∞≈üleme',
    icon: 'üí¨',
    description: 'Metin i≈üleme, Dil modelleri ve NLP teknikleri',
    color: '#2ecc71',
    subCategories: ['Tokenizasyon', 'Vekt√∂r Modeller', 'Duygu Analizi', 'Makine √áevirisi']
  },
  {
    id: '5',
    title: 'Makine G√∂r√ºn√ºm√º',
    icon: 'üëÅÔ∏è',
    description: 'G√∂r√ºnt√º i≈üleme, Nesne tanƒ±ma ve diƒüer CV teknikleri',
    color: '#f39c12',
    subCategories: ['G√∂r√ºnt√º ƒ∞≈üleme', 'Nesne Tespiti', 'Segmentasyon', '3D G√∂r√ºnt√ºleme']
  },
];

// √ñne √ßƒ±kan algoritma kartlarƒ±
const featuredCards = [
  {
    id: '1',
    title: 'Arama Algoritmalarƒ±',
    description: 'Linear, Binary ve Hash tabanlƒ± arama algoritmalarƒ±',
    icon: 'üîç',
    link: '/algorithms/1',
    complexity: 'O(log n) - O(n)'
  },
  {
    id: '2',
    title: 'Sƒ±ralama Algoritmalarƒ±',
    description: 'Quick, Merge, Bubble ve Selection sƒ±ralama',
    icon: 'üîÑ',
    link: '/algorithms/1',
    complexity: 'O(n log n) - O(n¬≤)'
  },
  {
    id: '3',
    title: 'Grafik Algoritmalarƒ±',
    description: 'DFS, BFS, Dijkstra ve diƒüer algoritmalarƒ±',
    icon: 'üìä',
    link: '/algorithms/1',
    complexity: 'O(V+E) - O(V¬≤)'
  },
  {
    id: '4',
    title: 'Optimizasyon Algoritmalarƒ±',
    description: 'Dinamik programlama ve diƒüer optimizasyon y√∂ntemleri',
    icon: '‚ö°',
    link: '/algorithms/3',
    complexity: 'Deƒüi≈üken'
  }
];

const NewHome: React.FC = () => {
  // localStorage'dan oturum durumunu kontrol et
  const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';
  const username = localStorage.getItem('username') || '';
  const userInitial = username ? username.charAt(0).toUpperCase() : 'G';

  return (
    <div className="home-safe-area">
      <div className="home-content">
        <header className="home-header">
          <div className="home-logo">
            <img src={logoImage} alt="Logo" className="logo-fallback" />
            <div className="home-logo-text">Algoritma K√ºt√ºphanesi</div>
          </div>
          <div className="header-right">
            <button className="search-button">üîç</button>
            <Link to={isLoggedIn ? "/profile" : "/login"} className="profile-button">
              {isLoggedIn ? userInitial : 'üîë'}
            </Link>
          </div>
        </header>
        
        <section className="main-section">
          <div className="section-title">
            <span className="section-title-accent"></span>
            Kategoriler
          </div>
          <div className="categories-grid">
            {categories.map((item) => (
              <Link 
                to={`/algorithms/${item.id}`} 
                className="category-card" 
                key={item.id}
              >
                <div className="category-image">{item.icon}</div>
                <div className="category-info">
                  <div className="category-name">{item.title}</div>
                  <div className="category-count">{item.subCategories.length} algoritma</div>
                </div>
              </Link>
            ))}
          </div>
        </section>
        
        <section className="main-section">
          <div className="section-title">
            <span className="section-title-accent"></span>
            Pop√ºler Algoritmalar
          </div>
          <div className="featured-algorithms">
            {featuredCards.map(card => (
              <Link 
                to={card.link} 
                className="algorithm-card" 
                key={card.id}
              >
                <div className="algorithm-info">
                  <div className="algorithm-title">{card.title}</div>
                  <div className="algorithm-description">{card.description}</div>
                  <div className="algorithm-complexity">Karma≈üƒ±klƒ±k: {card.complexity}</div>
                </div>
                <div className="algorithm-icon">{card.icon}</div>
              </Link>
            ))}
          </div>
        </section>
        
        {!isLoggedIn && (
          <section className="main-section login-prompt-section">
            <div className="section-title">
              <span className="section-title-accent"></span>
              Hesap Olu≈üturun
            </div>
            <div className="login-prompt">
              <p>Algoritma K√ºt√ºphanesi'nde hesap olu≈üturarak favori algoritmalarƒ± kaydedin ve ziyaret ge√ßmi≈üinizi takip edin.</p>
              <Link to="/login" className="login-button">
                Giri≈ü Yap / Kayƒ±t Ol
              </Link>
            </div>
          </section>
        )}
      </div>
    </div>
  );
};

export default NewHome; 